version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.app
    env_file:
      - .env
    volumes:
      - ./app:/usr/src/app/app
    depends_on:
      - database
      - rabbitmq
    restart: on-failure
    networks:
      - ml-network

  web-proxy:
    image: nginx:1.26.2
    depends_on:
      - app
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
      - "443:443"
    restart: on-failure
    networks:
      - ml-network

  rabbitmq:
    image: rabbitmq:3.11-management
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-guest}
    restart: on-failure
    networks:
      - ml-network

  database:
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-password}
      POSTGRES_DB: ${DB_NAME:-app_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: on-failure
    networks:
      - ml-network

volumes:
  postgres_data:
  rabbitmq_data:

networks:
  ml-network:
    driver: bridge
